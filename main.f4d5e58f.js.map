{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","container","appendRowButton","removeRowButton","appendColumnButton","removeColumnButton","addEventListener","handleEvent","ev","target","classList","contains","buttonAction","capitalizeText","actions","rowsCount","children","length","columnsCount","lastElementChild","disabled","appendRow","row","createElement","i","cell","append","appendColumn","rows","forEach","removeRow","remove","removeColumn","text","result","split","slice","toUpperCase","join"],"mappings":";AAAA,aA0EC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxED,IAAMA,EAAQC,SAASC,cAAc,gBAC/BC,EAAYF,SAASC,cAAc,cACnCE,EAAkBH,SAASC,cAAc,eACzCG,EAAkBJ,SAASC,cAAc,eACzCI,EAAqBL,SAASC,cAAc,kBAC5CK,EAAqBN,SAASC,cAAc,kBAElDC,EAAUK,iBAAiB,QAAS,CAClCC,YAAYC,SAAAA,GACN,GAACA,EAAGC,OAAOC,UAAUC,SAAS,UAA9B,CAIEC,IAAAA,EAAeC,EAAeL,EAAGC,OAAOC,UAAU,IAExDI,EAAQF,KAEFG,IAAAA,EAAYjB,EAAMkB,SAASC,OAC3BC,EAAepB,EAAMqB,iBAAiBH,SAASC,OAIrDf,EAAgBkB,SAAYL,GAHX,GAIjBZ,EAAgBiB,SAAYL,GAHX,EAIjBX,EAAmBgB,SAAYF,GALd,GAMjBb,EAAmBe,SAAYF,GALd,MASrB,IAAMJ,EAAU,CACdO,UAAY,WAIL,IAHCH,IAAAA,EAAepB,EAAME,cAAc,MAAMgB,SAASC,OAClDK,EAAMvB,SAASwB,cAAc,MAE1BC,EAAI,EAAGA,GAAKN,EAAcM,IAAK,CAChCC,IAAAA,EAAO1B,SAASwB,cAAc,MAEpCD,EAAII,OAAOD,GAGb3B,EAAM4B,OAAOJ,IAGfK,aAAe,WAGTC,EAFS9B,EAAMkB,UAETa,QAAQ,SAAAP,GACVG,IAAAA,EAAO1B,SAASwB,cAAc,MAEpCD,EAAII,OAAOD,MAIfK,UAAY,WACVhC,EAAMqB,iBAAiBY,UAGzBC,aAAe,WAGTJ,EAFS9B,EAAMkB,UAETa,QAAQ,SAAAP,GAChBA,EAAIH,iBAAiBY,aAK3B,SAASlB,EAAeoB,GAChBC,IAAAA,EAASD,EAAKE,MAAM,KAInBD,OAFPA,EAAO,GAAKA,EAAO,GAAGE,MAAM,EAAG,GAAGC,cAAgBH,EAAO,GAAGE,MAAM,GAE3DF,EAAOI,KAAK","file":"main.f4d5e58f.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('.field tbody');\nconst container = document.querySelector('.container');\nconst appendRowButton = document.querySelector('.append-row');\nconst removeRowButton = document.querySelector('.remove-row');\nconst appendColumnButton = document.querySelector('.append-column');\nconst removeColumnButton = document.querySelector('.remove-column');\n\ncontainer.addEventListener('click', {\n  handleEvent(ev) {\n    if (!ev.target.classList.contains('button')) {\n      return;\n    }\n\n    const buttonAction = capitalizeText(ev.target.classList[0]);\n\n    actions[buttonAction]();\n\n    const rowsCount = table.children.length;\n    const columnsCount = table.lastElementChild.children.length;\n    const maxCells = 10;\n    const minCells = 2;\n\n    appendRowButton.disabled = (rowsCount >= maxCells);\n    removeRowButton.disabled = (rowsCount <= minCells);\n    appendColumnButton.disabled = (columnsCount >= maxCells);\n    removeColumnButton.disabled = (columnsCount <= minCells);\n  },\n});\n\nconst actions = {\n  appendRow() {\n    const columnsCount = table.querySelector('tr').children.length;\n    const row = document.createElement('tr');\n\n    for (let i = 1; i <= columnsCount; i++) {\n      const cell = document.createElement('td');\n\n      row.append(cell);\n    }\n\n    table.append(row);\n  },\n\n  appendColumn() {\n    const rows = table.children;\n\n    [...rows].forEach(row => {\n      const cell = document.createElement('td');\n\n      row.append(cell);\n    });\n  },\n\n  removeRow() {\n    table.lastElementChild.remove();\n  },\n\n  removeColumn() {\n    const rows = table.children;\n\n    [...rows].forEach(row => {\n      row.lastElementChild.remove();\n    });\n  },\n};\n\nfunction capitalizeText(text) {\n  const result = text.split('-');\n\n  result[1] = result[1].slice(0, 1).toUpperCase() + result[1].slice(1);\n\n  return result.join('');\n};\n"]}